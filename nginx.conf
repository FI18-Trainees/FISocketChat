http {
	proxy_set_header X-Real-IP $remote_addr;
	deny all;

	server {
		listen 80;
		server_name your.service.com;

        location / {
			proxy_pass http://localhost:5000/;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
		}

		location ^~ /socket {
           rewrite  ^/socket/(.*)  /$1 break; #used to send request to base url
           proxy_pass http://nodes;
           proxy_redirect off;
           proxy_pass_request_headers on;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header Host $http_host;
           proxy_set_header X-NginX-Proxy true;
           proxy_set_header X-Forwarded-Host $host;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
           proxy_set_header Host $host;

        }
	}

	server {
    listen       443 ssl;
    server_name  your.service.com;

    ssl_certificate   cert/2xxx50.pem;
    ssl_certificate_key  cert/2xx50.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://localhost:5000/;
    }

    location /socket.io/ {
        proxy_pass http://localhost:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
    upstream nodes {
		# enable sticky session based on IP
		ip_hash;

		server localhost:5000;
	}
}
